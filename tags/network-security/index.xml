<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>network security on Karl&#39;s Blog</title>
    <link>https://blog.notmet.net/tags/network-security/</link>
    <description>Recent content in network security on Karl&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kc0bfv@notmet.net (Karl Sickendick)</managingEditor>
    <webMaster>kc0bfv@notmet.net (Karl Sickendick)</webMaster>
    <lastBuildDate>Sat, 16 Jun 2018 15:03:51 +0000</lastBuildDate>
    
	<atom:link href="https://blog.notmet.net/tags/network-security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Confidentiality and Integrity vs Availability</title>
      <link>https://blog.notmet.net/2018/06/confidentiality-and-integrity-vs-availability/</link>
      <pubDate>Sat, 16 Jun 2018 15:03:51 +0000</pubDate>
      <author>kc0bfv@notmet.net (Karl Sickendick)</author>
      <guid>https://blog.notmet.net/2018/06/confidentiality-and-integrity-vs-availability/</guid>
      <description>In computer security, there are three main axes for consideration - confidentiality, integrity, and availability (CIA). These are commonly thought of as things you desire out of a secure system. You want your communications to only be available to the intended agents, you want them to remain unchanged except when you intend them to change, and you want them to be available when you need them. Preferably, you want your communications to have all of those properties.</description>
    </item>
    
    <item>
      <title>Drupal Exploited like Crazy</title>
      <link>https://blog.notmet.net/2018/04/drupal-exploited-like-crazy/</link>
      <pubDate>Wed, 18 Apr 2018 10:11:12 +0000</pubDate>
      <author>kc0bfv@notmet.net (Karl Sickendick)</author>
      <guid>https://blog.notmet.net/2018/04/drupal-exploited-like-crazy/</guid>
      <description>It looks like https://github.com/nixawk/labs/issues/19 is being exploited like crazy right now. I was getting hits trying to exploit it every 4 hours or so, then the rate sped up for a time. Each hit was trying to download drupal.php from http://51.254.219.134.
Somebody has nulled out that file now, so infection rate will probably drop.</description>
    </item>
    
    <item>
      <title>Building Your Own OpenVPN</title>
      <link>https://blog.notmet.net/2016/03/building-your-own-openvpn/</link>
      <pubDate>Sat, 26 Mar 2016 20:38:22 +0000</pubDate>
      <author>kc0bfv@notmet.net (Karl Sickendick)</author>
      <guid>https://blog.notmet.net/2016/03/building-your-own-openvpn/</guid>
      <description>I&amp;rsquo;ve wanted to have a VPN setup for a while - I&amp;rsquo;ve never been entirely comfortable when using public wifi, even secured public wifi&amp;hellip; Open wifi? I feel a little crazy every time I connect. But I usually console myself that I&amp;rsquo;m not a target, I can make sure important connections are encrypted, and I can just avoid doing some things while on public wifi.
A VPN though, that could make things much easier!</description>
    </item>
    
    <item>
      <title>Open Port</title>
      <link>https://blog.notmet.net/2012/11/open-port/</link>
      <pubDate>Sun, 11 Nov 2012 15:20:53 +0000</pubDate>
      <author>kc0bfv@notmet.net (Karl Sickendick)</author>
      <guid>https://blog.notmet.net/2012/11/open-port/</guid>
      <description>Every now and then when I&amp;rsquo;m at a coffee shop I wonder what ports I&amp;rsquo;ve got open on my home network. Normally I don&amp;rsquo;t have any ports open within Nmap&amp;rsquo;s default port list.
Starting Nmap 6.01 Initiating SYN Stealth Scan at 16:41 Scanning myRouter [1000 ports] Discovered open port 1111/tcp on myRouter Completed SYN Stealth Scan (1000 total ports) Not shown: 999 filtered ports PORT STATE SERVICE 1111/tcp open lmsocialserver Read data files from: /usr/local/bin/.</description>
    </item>
    
    <item>
      <title>Advanced SQL Injection</title>
      <link>https://blog.notmet.net/2011/07/advanced-sql-injection/</link>
      <pubDate>Thu, 28 Jul 2011 16:58:00 +0000</pubDate>
      <author>kc0bfv@notmet.net (Karl Sickendick)</author>
      <guid>https://blog.notmet.net/2011/07/advanced-sql-injection/</guid>
      <description>Ok, here&amp;rsquo;s a great blog post by Chris Shiflett about a crazy-creative SQL injection technique: http://shiflett.org/blog/2006/jan/addslashes-versus-mysql-real-escape-string
Very cool. His technique relies on tricking addslashes into breaking up a two byte character with a slash, creating a valid two byte character followed by a valid one byte character. He mentions that this (specific attack) is impossible with UTF-8 because all two (or more) byte characters have continuation bytes that start with 0b10.</description>
    </item>
    
  </channel>
</rss>