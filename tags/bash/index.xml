<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bash on Karl&#39;s Blog</title>
    <link>https://blog.notmet.net/tags/bash/</link>
    <description>Recent content in bash on Karl&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kc0bfv@notmet.net (Karl Sickendick)</managingEditor>
    <webMaster>kc0bfv@notmet.net (Karl Sickendick)</webMaster>
    <lastBuildDate>Mon, 04 Feb 2013 17:00:16 +0000</lastBuildDate>
    
	<atom:link href="https://blog.notmet.net/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unix Text Editing Awesomeness</title>
      <link>https://blog.notmet.net/2013/02/unix-awesomeness/</link>
      <pubDate>Mon, 04 Feb 2013 17:00:16 +0000</pubDate>
      <author>kc0bfv@notmet.net (Karl Sickendick)</author>
      <guid>https://blog.notmet.net/2013/02/unix-awesomeness/</guid>
      <description>Oh, LaTeX acronym package, you won&amp;rsquo;t automatically alphabetize my list of acronyms? Strange&amp;hellip; Let&amp;rsquo;s see if Unix will&amp;hellip;
$ echo &amp;quot;\acro{SCADA}{Supervisory Control And Data Acquisition} \acro{PLC}{Programmable Logic Controller} \acro{RTU}{Remote Terminal Unit} ...&amp;quot; &amp;gt; toSort $ for i in `cat toSort |sed &amp;quot;s/.*\\acro{\(.*\)}.*{.*}/\1/&amp;quot; | sort`; do grep &amp;quot;{$i}&amp;quot; toSort; done \acro{ADC}{analog to digital converter} \acro{API}{application programming interface} \acro{APT}{Advanced Persistent Threat} \acro{ASCII}{American Standard Code for Information Interchange} ... Unix, you rock my world.</description>
    </item>
    
    <item>
      <title>Bash Dictionary - Terrible Hack of the Day</title>
      <link>https://blog.notmet.net/2012/12/bash-dictionary-terrible-hack-of-the-day/</link>
      <pubDate>Wed, 19 Dec 2012 21:06:28 +0000</pubDate>
      <author>kc0bfv@notmet.net (Karl Sickendick)</author>
      <guid>https://blog.notmet.net/2012/12/bash-dictionary-terrible-hack-of-the-day/</guid>
      <description>So, I just had a reason to implement something like a dictionary in Bash. Of course, I could try to determine if such a feature exists already (it does in Bash 4, alas the default on OS X seems to be 3.2), but why not just try to hack something together?
Here&amp;rsquo;s what I got initially:
OFFSETDICTkeyUno=5 OFFSETDICTkeyDos=4 OFFSETDICTkeyTres=17 OFFSETDICTkeyQuatro=21 keyToLookup=&amp;quot;keyQuatro&amp;quot; value=&amp;quot;$(eval echo &#39;$OFFSETDICT&#39;${keyToLookup})&amp;quot; echo $value &amp;gt; 21 So, that&amp;rsquo;s ridiculous.</description>
    </item>
    
  </channel>
</rss>